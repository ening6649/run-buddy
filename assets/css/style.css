* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

:root {
    --primary-color: #fce138;
    --secondary-color: #024e76;
    --tertiary-color: #39a6b2;
  }
/* apply styles to <header> */
header {
    padding: 20px 35px;
    background-color: #39a6b2;
    display: flex;
    justify-content: space-between;
    /* allow items to go to the next line when they dont fit */
    flex-wrap: wrap;
    /* sticky header. top:0 tells the browser where to stick the element */
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    /* -webkit- is a vendor pre-fix to support it in certain browsers . the pre-fix line should always be above the standardized lines*/
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    /* places the image relative to the viewport instead of the element  */
    background-attachment: fixed;
    background-position: 80%;
    z-index: 9999;
  }
  header h1 {
    font-weight: bold;
    font-size: 36px;
    color: var(--primary-color);
    margin: 0;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    /* display:inline; */
  }
  
  header a {
    color: var(--primary-color);
    text-decoration: none;
  }
  header nav {
    /* float: right; */
    margin: 7px 0;
  }
  
  header nav ul {
    display: flex;
    flex-wrap: wrap;
    /*  always follows the main axis. default value of flex direction is set to row. in this case, horizontally aligns the items. */
    justify-content: space-between;
    /* always follow the none main axis. in this case, vertically centers the items. if flex-direction is set to column, then the reverse*/
    align-items: center;
    list-style: none;
  }
  
  /* header nav ul li {
    display: inline;
  } */
  header nav ul li a {
    padding: 10px 15px;
    font-weight: lighter;
    font-size: 1.55vw;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    /* font-size: 22px; */
  }
    /* this next part adds a hover effect  */
  header nav ul li a:hover {
    background: var(--primary-color);
    color: var(--secondary-color);
    border-radius: 15px;
    text-shadow: none;
  }


body {
    /*comment section*/
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
  }

footer {
    background: var(--primary-color);
    width: 100%;
    padding: 40px 35px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  footer h2 {
    
    /* display: inline; */
    color: var(--secondary-color);
    font-size: 30px;
    margin: 0;
  }
  footer div {
    
    /* float: right; */
    line-height: 1.5;
    text-align: right;
  }
  footer a {
    color: var(--secondary-color);
  }

  section {
    padding: 60px;
  }

  /*hero style start . = class selector*/
  .hero {
    background-image: url("../images/hero-bg.jpg");
    /* height: 600px; */
    background-size: cover;
    background-position: center;
    /* position: relative; */
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    /* align-item default value is stretch, which means all flex children will grow to the size of the tallest one */
    align-items: flex-start;
    /* as above in header , places the image relative to the viewport instead of the element  */
    background-attachment: fixed;
    background-position: 80%;
  }
  /* Hero Style End */ 

  .hero-cta {
    width: 35%;
    text-align: right;
    margin: 3.5%;
    color: #fff;
    font-size: 18px;
    line-height: 1.2;
  }

  .hero-cta h2 {
    font-style: italic;
    font-size: 55px;
    color: var(--primary-color);
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }

  .hero-form {
      background-color: var(--primary-color);
      color: var(--secondary-color);
      /* width: 500px; */
      padding: 20px;
      /* position: absolute; */
      /* this absolute position takes the form out side the flow of the document and causes the left side to run into the form when the left side has no css style */
      /* bottom: 120px;
      right: 140px; */
      border-style: solid;
      border-width: 3px;
      border-color: var(--secondary-color);
      width: 40%;
      margin: 3.5%;
      box-shadow: 0 0 10px rgba(252, 225, 56, 0.8);
      /* adds rounded corner. move 15 px in on the x and y axis */
      border-radius: 15px;
    /*shorthand border: solid 3px var(--secondary-color);*/
  }
  .hero-form h3 {
      margin: 0;
      font-size: 24px;

  }
  .hero-form p {
    margin:5px 0 15px 0;
  }

  /* opacity at 0 makes the inputs inside dissapear */
  .checkbox-wrapper input, .radio-wrapper input {
    opacity: 0;
    position: relative;
   left: 10px;
    margin: 10px;
    line-height: 1.6;
  }

  /* before places this content before everything else that currently resides in the element */
  .checkbox-wrapper label::before, .radio-wrapper label::before {
    content: "";
    height: 20px;
    width: 20px;
    background: rgba(255, 255, 255, 0.75);  
    border: 1px solid var(--secondary-color);  
    position: absolute;
    top: -4px;
    left: -30px;
  }

  .radio-wrapper label::before {
    /* turns an element into a round circle or oval */
    border-radius: 50%;
  }

  .radio-wrapper label::after {
    content: "";
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: var(--secondary-color);
    position: absolute;
    left: -29px;
    top: -3px;
  }
  
  .checkbox-wrapper label::after {
    content: "";
    height: 6px;
    width: 14px;
    border-left: 2px solid var(--secondary-color);
    border-bottom: 2px solid var(--secondary-color);
    position: absolute;
    left: -26px;
    top: 1px;
    transform: rotate(-58deg);
  }

  .checkbox-wrapper input + label::after, .radio-wrapper input + label::after {
    content: none;
  }
  
  .checkbox-wrapper input:checked + label::after, .radio-wrapper input:checked + label::after {
    content: "";
  }

  .form-input {
      border: 1px solid var(--secondary-color);
      display: block;
      padding: 7px 15px;
      font-size: 16px;
      color:var(--secondary-color);
      width: 100%;
      margin-bottom: 15px;
      border-radius: 10px;
      background-color: rgba(255,255,255, 0.75);
  }

  .form-input:focus {
    background-color: rgba(255,255,255, 1);
    /* removes borders around input box */
    outline: none;
  }

  .hero-form label {
    margin: 0 5px;
  }

  .hero-form button {
    color: var(--primary-color);
    background-color: var(--secondary-color);
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 10px;
  }

  .hero-form button:hover {
    background-color: #39a6b2;  
  }

  /* .intro {
    text-align: center;
  } 
  */

  /* .intro h2 {
    font-size: 55px;
    color: var(--secondary-color);
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    border-bottom: 3px solid;
    border-color: #fce138;
    display: inline-block;
  }
   */

  .intro p {
    line-height: 1.7;
    color: #39a6b2;
    width: 80%;
    font-size: 20px;
   /*only works for horizontal centering. top bottom margin 0 left and right auto*/
    margin: 0 auto;
    text-align: center;
  }

  .step {
    margin: 50px auto;
    padding-bottom: 50px;
    width: 80%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }

  .step:not(:last-child){
    border-bottom: 1px solid #39a6b2;
  }

/* or for the same result above, add border-bottom:1px solid , color to step and border-bottom:none and replace .step:last-child */

  /* adds a border only to the last child
  .step:last-child {
    border-bottom: 1px solid #39a6b2;
  } */

  /* adds a border to every even numbered child of the section with class step. here it adds to step 1 and 3 because div class flex row is the first child.  
  .step:nth-child(even) {
  border-bottom: 1px solid #39a6b2;
}*/

  .steps {
    /* text-align: center; */
    background: var(--primary-color);
  }
  /* .steps h2 {
    font-size: 55px;
    color: var(--secondary-color);
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    border-bottom: 3px solid;
    border-color: #39a6b2;
  } */
 
 /* consolidation of intro h2 and step h2  */
  .section-title {
    font-size: 48px;
    color: var(--secondary-color);
    margin-bottom: 35px;
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;

    /* padding: 0 100px 20px 100px;
    display: inline-block;
    border-bottom: 3px solid; */
  }
  
  .primary-border {
    border-color: var(--primary-color);
  }
  
  .secondary-border {
    border-color: #39a6b2;
  }

  /* .steps div {
      margin-bottom:80px;
  } */

  /* .steps img {
      width:15%;
      margin:10px 0;
  } */

  .step-info {
    flex: 2 70%;
    /* will receive any extra space in the container at 2 to 1 ration and be at least 70% wide . flex-grow then flex-basis */
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }

  /* renamed from steps h3 to step h3 */
  .step h3 {
      color: var(--secondary-color);
      font-size:46px;
      /* margin-top:10px; */
      flex: 1 30%;
      /* will receive any extra space in the container and be at least 30% wide */
  }

  .step-img {
    flex: 1 12%;
    margin-right: 20px;
  }

  .step-text {
    flex: 12;
  }

  /* limits the width of image to be whatever its container is */
  .step-img img {
    max-width: 100%;
  }

  /* renamed from steps p  */
  .step-text p {
      color:#39a6b2;
      font-size: 18px;
  }

  .step-text h4 {
    font-size: 26px;
    line-height: 1.5;
    color: var(--secondary-color);
  }

  /* .steps span {
      font-size: 38px;
  } */

  .trainers {
     /* text-align: center;  */
     width: 100%;
     margin: 0 auto;
     display: flex;
     flex-wrap: wrap;
     justify-content: space-around;
  }

  .trainer {
    /* width: 900px; */
    margin: 20px;
    background: var(--secondary-color);
    color: var(--primary-color);
    /* overflow:auto; */
    flex: 1;
  }

  .trainer img {
    width: 100%;
    /* float: left; */
  }
  
  .trainer-bio {
    padding: 25px;
    /* float: left;
    width: 65%; */
    line-height: 1.3;
  }
/* .text-left and right are utility classes that can be applied to any element in html */
  .text-left {
    text-align: left;
  }
  
  .text-right {
    text-align: right;
  }

  /* css utility class for flexbox addition */
  .flex-row {
    display: flex;
  }

  .trainer-bio h3 {
  font-size: 28px;
  /* margin-bottom: 8px; */
}

.trainer-bio h4 {
  font-weight: lighter;
  font-size: 22px;
  margin-bottom: 15px;
}

.trainer-bio p {
  font-size: 17px;
  
}

/* REACH OUT STYLES START */
.contact {
    /* text-align: center; */
    background: var(--secondary-color);
  }

.contact h2 {
    color: var(--primary-color);
  }

.contact-info {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

/* > only specially the direct children of the element contact-info *selects all elements that are direct children of anything with a class of contact info */
/* this is necessary here because the children elements are of different types, unlike the trainers section where the elements are of similar type */
.contact-info >*{
  flex: 1;
  margin: 15px;
}

  .contact-info iframe {
    /* width: 400px; */
    height: 400px;
  }

.contact-info div {
    /* width: 410px;
    display: inline-block;
    vertical-align: top;
    text-align: left;
    margin: 30px 0 0 60px; */
    color: white;
  }

.contact-info h3 {
    color: var(--primary-color);
    font-size: 32px;
  }
  
.contact-info p, .contact-info address {
    margin: 20px 0;
    line-height: 1.5;
    font-size: 16px;
    font-style: normal;
  }
  
.contact-form input, .contact-form textarea {
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  margin-top: 5px;
  border-radius: 10px;
  background-color: rgba(255,255,255, 0.75);
}

.contact-form input:focus, .contact-form textarea:focus {
  background-color: rgba(255,255,255, 1);
  outline: none;
}

.contact-form button {
  width: 100%;
  border: none;
  background: var(--primary-color);
  color: var(--secondary-color);
  text-align: center;
  padding: 15px 0;
  font-size: 16px;
  border-radius: 10px;
}

.contact-form button:hover {
  color: var(--primary-color);
  background: #39a6b2;
}

.contact-info a {
    color: var(--primary-color);
  }
  
  /* REACH OUT STYLES END */

  /* secondary page hero 
.hero-secondary {
  margin: 20px;
  background-color: black;
  font-size: 20px;
  color: red;
}
*/

/* these two colors will override the ones above in .hero 
.hero-secondary {
  background-color: black;
  color: red;
}
*/

/* MEDIA QUERY FOR SMALLER DESKTOP SCREENS AND SMALLER */
@media screen and (max-width: 980px) {
  
  header {
    padding-bottom: 0;
    justify-content: center;
    /* this should change all screen size below 980 to display relative header position instead of fixed*/
    position: relative;
  }

  header h1 {
    width: 100%;
    text-align: center;
  }

  header nav ul {
    margin-top: 20px;
    width: 100%;
    justify-content: center;
  }

  header nav ul li a {
    font-size: 20px;
  }

  footer h2, footer div {
    text-align: center;
    width: 100%;
  }
  
  .hero-cta, .hero-form {
    width: 100%;
  }
  
  .hero-cta {
    text-align: center;
  }

  .section-title {
    width: 80%;
  }
  
  .trainer {
    flex: 0 70%;
  }
  
  .contact-info iframe{
    flex: 1 100%;
  }
}

/* MEDIA QUERY FOR TABLETS AND SMALLER */
@media screen and (max-width: 768px) {
  section {
    padding: 30px 15px;
  }
  
  .step h3 {
    flex: 1 100%;
    text-align: center;
  }

  .step-info {
    flex: 2 100%;
    text-align: center;
    justify-content: center;
  }

  .step-img {
    flex: 0 32%;
    margin-right: 0;
    margin-top: 15px;
    margin-bottom: 15px;
  }

  .step-text {
    flex: 100%;  
  }

}

/* MEDIA QUERY FOR MOBILE PHONES AND SMALLER */
@media screen and (max-width: 575px) {
  .hero-form button {
    width: 100%;
  }

  .section-title {
    width: 95%;
  }

  .intro p {
    width: 100%;
  }

  .trainer {
    flex: 0 100%;
  }

  .contact-info {
    text-align: center;
  }

  .contact-info > * {
    flex: 0 100%;
  }
  
  /* the contact form will switch places with the map and not show correctly without the following */
  .contact-form {
    order: 3;
  }
}


/*  
.some-class {
  text-shadow: 5px 10px 15px black;
  box-shadow: 5px 10px 15px black;
}
horizontal offset 5, vertical offset 10, radius of shawdow blur 15 . postive number start at top left. negative from bottom right
RGB = red/green/blue blend rgb(0,0,0) = black rgb(255,255,255)= white 
rgba = alpha , transparency value between 0.0 and 1.0 , 0 is fully opaque , 0 fully transparent. 
box-shadow: 5px 10px 15px rgba(0, 0, 0, 0.25);
*/

/* defines a color and can be referenced in html with its name
div {
  --favorite-color: blue;
  color: var(--favorite-color);
  box-shadow: 5px 5px 10px var(--favorite-color);
}

div {
  --size-small: 12px;
  --size-big: 50px;
  font-size: var(--size-small);
  margin: var(--size-big) var(--size-small);
}
below is a global pseudo-class selector. all elements will have access to the variables instead of only in a div
:root {
  --primary-color: #fce138;
  --secondary-color: var(--secondary-color);
  --tertiary-color: #39a6b2;
}
*/
